{
   "openapi":"3.0.1",
   "info":{
      "title":"Very popular Social Network",
      "version":"v1"
   },
   "servers":[
      {
         "url":"http://localhost:50000",
         "description":"Generated server url"
      }
   ],
   "paths":{
      "/login":{
         "post":{
            "tags":[
               "auth-controller"
            ],
            "summary":"Authenticate a user",
            "operationId":"loginUser",
            "parameters":[
               {
                  "name":"login",
                  "in":"query",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"password",
                  "in":"query",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid credentials"
               },
               "200":{
                  "description":"Successful authentication",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/JwtResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/JwtResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/register":{
         "post":{
            "tags":[
               "auth-controller"
            ],
            "summary":"Register a user",
            "operationId":"registerUser",
            "requestBody":{
               "description":"Information about user",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/UserDTO"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Successful registration",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Response"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/Response"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Login already exists",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/friends":{
         "get":{
            "tags":[
               "friend-controller"
            ],
            "summary":"Get all user's friends",
            "operationId":"getAllFriends",
            "responses":{
               "200":{
                  "description":"All friends returned",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UsersResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/UsersResponse"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "bearerAuth":[
                     
                  ]
               }
            ]
         }
      },
      "/friends/add":{
         "post":{
            "tags":[
               "friend-controller"
            ],
            "summary":"Add a friend to user's friend list",
            "operationId":"addFriend",
            "parameters":[
               {
                  "name":"userId",
                  "in":"query",
                  "description":"Added user's id",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "400":{
                  "description":"User not found",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "200":{
                  "description":"Friend has been added to your friends list",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Response"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/Response"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "bearerAuth":[
                     
                  ]
               }
            ]
         }
      },
      "/friends/remove":{
         "delete":{
            "tags":[
               "friend-controller"
            ],
            "summary":"Remove user's friend from friend list",
            "operationId":"removeFriend",
            "parameters":[
               {
                  "name":"userId",
                  "in":"query",
                  "description":"Removed user's id",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Friend has been removed from your friends list",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Response"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/Response"
                        }
                     }
                  }
               },
               "400":{
                  "description":"User is not in friends",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "bearerAuth":[
                     
                  ]
               }
            ]
         }
      },
      "/friends/search":{
         "get":{
            "tags":[
               "friend-controller"
            ],
            "summary":"Search people in user's friend list",
            "operationId":"searchFriend",
            "parameters":[
               {
                  "name":"searchQuery",
                  "in":"query",
                  "description":"firstname or lastname of a user",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Returned friend list according to query",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UsersResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/UsersResponse"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "bearerAuth":[
                     
                  ]
               }
            ]
         }
      },
      "/message/history":{
         "get":{
            "tags":[
               "message-controller"
            ],
            "summary":"Get the entire message history with a user",
            "operationId":"getMessageHistory",
            "parameters":[
               {
                  "name":"withUserId",
                  "in":"query",
                  "description":"Id of the user with whom there was communication",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Returned message history",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MessageHistoryResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/MessageHistoryResponse"
                        }
                     }
                  }
               },
               "400":{
                  "description":"User not found",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "500":{
                  "description":"DB has changed during transaction (not found MessageHistory that was present)",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "bearerAuth":[
                     
                  ]
               }
            ]
         }
      },
      "/message/send":{
         "post":{
            "tags":[
               "message-controller"
            ],
            "summary":"Send a message to someone",
            "operationId":"sendMessage",
            "parameters":[
               {
                  "name":"to",
                  "in":"query",
                  "description":"Id of the user who will receive the message",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "requestBody":{
               "description":"Message to send",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/MessageDTO"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Message has been sent",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Response"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/Response"
                        }
                     }
                  }
               },
               "500":{
                  "description":"DB has changed during transaction; not found MessageHistory that was present)",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "400":{
                  "description":"User not found",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "bearerAuth":[
                     
                  ]
               }
            ]
         }
      },
      "/message/chatlist":{
         "get":{
            "tags":[
               "message-controller"
            ],
            "summary":"The list of message histories id in which user participated",
            "operationId":"getChatList",
            "responses":{
               "200":{
                  "description":"Returned all chats",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ChatListResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ChatListResponse"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "bearerAuth":[
                     
                  ]
               }
            ]
         }
      },
      "/people/search":{
         "get":{
            "tags":[
               "people-controller"
            ],
            "summary":"Find people by lastname or firstname",
            "operationId":"searchPeople",
            "parameters":[
               {
                  "name":"searchQuery",
                  "in":"query",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Returned all found people according to query",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UsersResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/UsersResponse"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "bearerAuth":[
                     
                  ]
               }
            ]
         }
      },
      "/profile":{
         "get":{
            "tags":[
               "profile-controller"
            ],
            "summary":"Get user's profile information",
            "operationId":"getProfile",
            "responses":{
               "200":{
                  "description":"Returned profile",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UserResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/UserResponse"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "bearerAuth":[
                     
                  ]
               }
            ]
         },
         "put":{
            "tags":[
               "profile-controller"
            ],
            "summary":"Update user's profile",
            "operationId":"updateProfile",
            "requestBody":{
               "description":"New information",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/UserDTO"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Profile successfully updated",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UserResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/UserResponse"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "bearerAuth":[
                     
                  ]
               }
            ]
         }
      },
      "/profile/{id}":{
         "get":{
            "tags":[
               "profile-controller"
            ],
            "summary":"Get another user's profile",
            "operationId":"getProfileById",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"Another user's id",
                  "required":true,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Returned profile of another user",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/UserResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/UserResponse"
                        }
                     }
                  }
               },
               "400":{
                  "description":"User not found",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     },
                     "application/xml":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "bearerAuth":[
                     
                  ]
               }
            ]
         }
      }
   },
   "components":{
      "schemas":{
         "JwtResponse":{
            "type":"object",
            "properties":{
               "bearer":{
                  "type":"string"
               }
            }
         },
         "UserDTO":{
            "type":"object",
            "properties":{
               "login":{
                  "type":"string"
               },
               "firstName":{
                  "type":"string"
               },
               "lastName":{
                  "type":"string"
               },
               "password":{
                  "type":"string"
               }
            }
         },
         "Response":{
            "type":"object",
            "properties":{
               "value":{
                  "type":"object"
               }
            }
         },
         "ErrorResponse":{
            "type":"object",
            "properties":{
               "error":{
                  "type":"string"
               }
            }
         },
         "UserResponse":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"integer",
                  "format":"int32"
               },
               "login":{
                  "type":"string"
               },
               "firstName":{
                  "type":"string"
               },
               "lastName":{
                  "type":"string"
               }
            }
         },
         "UsersResponse":{
            "type":"object",
            "properties":{
               "users":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/UserResponse"
                  }
               }
            }
         },
         "Message":{
            "type":"object",
            "properties":{
               "text":{
                  "type":"string"
               },
               "dateTime":{
                  "type":"string",
                  "format":"date-time"
               },
               "straightDirection":{
                  "type":"boolean"
               }
            }
         },
         "MessageHistoryResponse":{
            "type":"object",
            "properties":{
               "withUserId":{
                  "type":"integer",
                  "format":"int32"
               },
               "messages":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Message"
                  }
               }
            }
         },
         "MessageDTO":{
            "type":"object",
            "properties":{
               "text":{
                  "type":"string"
               }
            }
         },
         "ChatListResponse":{
            "type":"object",
            "properties":{
               "withUserIds":{
                  "type":"array",
                  "items":{
                     "type":"integer",
                     "format":"int32"
                  }
               }
            }
         }
      },
      "securitySchemes":{
         "bearerAuth":{
            "type":"http",
            "scheme":"bearer",
            "bearerFormat":"JWT"
         }
      }
   }
}